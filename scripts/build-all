#!/usr/bin/env node

const makeCommonJSInputConfig = require('../config/makeCommonJSInputConfig')
const makeCommonJSOutputConfig = require('../config/makeCommonJSOutputConfig')
const makeUMDInputConfig = require('../config/makeUMDInputConfig')
const makeUMDOutputConfig = require('../config/makeUMDOutputConfig')
const { rollup } = require('rollup')
const rimraf = require('rimraf')

function buildPkgs(pkgs) {
  return Promise.all(
    pkgs.map(packageName => {
      const packagePath = __dirname + '/../packages/' + packageName

      return rollup(makeCommonJSInputConfig(packagePath)).then(bundle => {
        const outputConfig = makeCommonJSOutputConfig(packagePath)
        if (outputConfig.file) {
          console.log('bundled cjs', packageName)
          return bundle.write(outputConfig)
        } else
          console.warn(
            'no output file specified in package.json for',
            packageName,
          )
      })
    }),
  )
}

buildPkgs(['@namicorn/core'])
  .then(() => buildPkgs(['@namicorn/ens', '@namicorn/zns']))
  .then(() => buildPkgs(['@namicorn/rns']))
  .then(() => buildPkgs(['namicorn']))
  .catch(console.error)
